{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\OneDrive\\\\WEB DEV\\\\weatherApp\\\\frontend\\\\src\\\\components\\\\Page1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { component } from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Weather from './Weather';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Page1() {\n  _s();\n  const [form, setForm] = useState(\"\");\n  const handleonChange = event => {\n    setForm(event.target.value);\n  };\n  const [entered, setEntered] = useState('');\n  const Submit = () => {\n    setEntered(form);\n    alert(`The city is set to ${form}`);\n  };\n  const [weather, setWeather] = useState(\"None\");\n  const [feels, setFeels] = useState(\"None\");\n  const [min, setMin] = useState(\"None\");\n  const [max, setMax] = useState(\"None\");\n  const [humidity, setHumidity] = useState(\"None\");\n  const [wind, setWind] = useState(\"None\");\n  let url = `https://api.openweathermap.org/data/2.5/weather?q=${form}&units=metric&appid=cbb5ff06d459a15d93e615ba2cbe7613`;\n  const getApi = () => {\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setWeather(data.main.temp);\n      setFeels(data.main.feels_like);\n      setMin(data.main.temp_min);\n      setMax(data.main.temp_max);\n      setHumidity(data.main.humidity);\n      setWind(data.wind.speed);\n    }).catch = err => {\n      console.log(\"Server Down\");\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Weather On GO \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      id: \"exampleFormControlInput1\",\n      placeholder: \"City\",\n      value: form,\n      onChange: handleonChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/cards\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: getApi,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Page1, \"zD+yOCty5DgLbgbU7UhegIgzoNM=\");\n_c = Page1;\nvar _c;\n$RefreshReg$(_c, \"Page1\");","map":{"version":3,"names":["React","useState","component","useEffect","axios","PropTypes","Weather","Link","jsxDEV","_jsxDEV","Page1","_s","form","setForm","handleonChange","event","target","value","entered","setEntered","Submit","alert","weather","setWeather","feels","setFeels","min","setMin","max","setMax","humidity","setHumidity","wind","setWind","url","getApi","fetch","then","response","json","data","console","log","main","temp","feels_like","temp_min","temp_max","speed","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","className","id","placeholder","onChange","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/OneDrive/WEB DEV/weatherApp/frontend/src/components/Page1.js"],"sourcesContent":["import React, { useState }  from 'react'\r\nimport  {component} from 'react'\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types';\r\nimport Weather from './Weather';\r\nimport{\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport default function Page1() {\r\n  \r\n  const[form,setForm]=useState(\"\");\r\n  const handleonChange=(event)=>{\r\n    setForm(event.target.value);\r\n  }\r\n  const[entered,setEntered]=useState('');\r\n  \r\n  const Submit=()=>{\r\n    setEntered(form);\r\n    alert(`The city is set to ${form}`);\r\n  }\r\n  const[weather,setWeather]=useState(\"None\");\r\n  const[feels,setFeels]=useState(\"None\");\r\n  const[min,setMin]=useState(\"None\");\r\n  const[max,setMax]=useState(\"None\");\r\n  const[humidity,setHumidity]=useState(\"None\");\r\n  const[wind,setWind]=useState(\"None\");\r\n\r\n  let url=`https://api.openweathermap.org/data/2.5/weather?q=${form}&units=metric&appid=cbb5ff06d459a15d93e615ba2cbe7613`;\r\n  \r\n  \r\n\r\n  const getApi=()=>{\r\n    fetch(url)\r\n    .then((response)=>response.json())\r\n    .then((data)=>{\r\n      console.log(data);\r\n      setWeather(data.main.temp);\r\n      setFeels(data.main.feels_like);\r\n      setMin(data.main.temp_min);\r\n      setMax(data.main.temp_max);\r\n      setHumidity(data.main.humidity);\r\n      setWind(data.wind.speed);\r\n    })\r\n    .catch=(err)=>{\r\n      console.log(\"Server Down\");\r\n    }\r\n   \r\n\r\n  }\r\n\r\n \r\n  return (\r\n    <div>\r\n        <h1> Weather On GO </h1>\r\n        <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"City\" value={form} onChange={handleonChange}></input>\r\n        <Link to=\"/cards\"><button type=\"button\" className=\"btn btn-primary\" onClick={getApi}>Get Weather</button></Link>\r\n        \r\n        \r\n     \r\n      {/* <Weather weather={weather} form={form} feels={feels} min={min} max={max} humidity={humidity} wind={wind}/> */}\r\n    </div>\r\n      )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}